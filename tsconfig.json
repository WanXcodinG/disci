{
    "compilerOptions": {
        "target": "es6",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        /* Modules */
        "module": "commonjs",                                /* Specify what module code is generated. */
    
        /* Emit */
        "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "outDir": "dist",                                   /* Specify an output folder for all emitted files. */
        "removeComments": false,                           /* Disable emitting comments. */
        "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
        "importsNotUsedAsValues": "error",
       
        "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    
        /* Type Checking */
         "strict": true,                                      /* Enable all strict type-checking options. */
         "noImplicitAny": true,          
         "allowUnreachableCode": false,
         "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
         "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
         "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
         "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
         "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
         "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
         "noUnusedLocals": true,
    
        "skipLibCheck": true                              
     }
}